import React, { useState, useEffect } from 'react';
import '../../CSS/AdminPanel.css';

const AdminPanel = () => {
  // State Management
  const [currentView, setCurrentView] = useState('dashboard');
  const [users, setUsers] = useState([]);
  const [products, setProducts] = useState([]);
  const [transactions, setTransactions] = useState([]);
  const [newUser, setNewUser] = useState({
    username: '',
    email: '',
    type: 'client',
    password: '',
    phone: ''
  });
  const [newProduct, setNewProduct] = useState({
    name: '',
    description: '',
    price: '',
    category: '',
    owner: '',
    status: 'available'
  });

  // Sidebar Menu Items
  const menuItems = [
    { id: 'dashboard', label: 'Dashboard', icon: '📊' },
    { id: 'users', label: 'User Management', icon: '👥' },
    { id: 'products', label: 'Product Management', icon: '🛍️' },
    { id: 'transactions', label: 'Transactions', icon: '💰' },
    { id: 'settings', label: 'Settings', icon: '⚙️' }
  ];

  // User Management Functions
  const handleAddUser = (e) => {
    e.preventDefault();
    const userToAdd = {
      ...newUser,
      id: Date.now(),
      createdAt: new Date().toISOString()
    };
    setUsers([...users, userToAdd]);
    setNewUser({ username: '', email: '', type: 'client', password: '', phone: '' });
  };

  const handleDeleteUser = (userId) => {
    setUsers(users.filter(user => user.id !== userId));
  };

  // Product Management Functions
  const handleAddProduct = (e) => {
    e.preventDefault();
    const productToAdd = {
      ...newProduct,
      id: Date.now(),
      createdAt: new Date().toISOString()
    };
    setProducts([...products, productToAdd]);
    setNewProduct({ 
      name: '', 
      description: '', 
      price: '', 
      category: '', 
      owner: '', 
      status: 'available' 
    });
  };

  const handleDeleteProduct = (productId) => {
    setProducts(products.filter(product => product.id !== productId));
  };

  // Render Views
  const renderDashboard = () => (
    <div className="dashboard">
      <h2>Admin Dashboard</h2>
      <div className="dashboard-stats">
        <div className="stat-card">
          <h3>Total Users</h3>
          <p>{users.length}</p>
        </div>
        <div className="stat-card">
          <h3>Total Products</h3>
          <p>{products.length}</p>
        </div>
        <div className="stat-card">
          <h3>Fournisseurs</h3>
          <p>{users.filter(u => u.type === 'fournisseur').length}</p>
        </div>
        <div className="stat-card">
          <h3>Clients</h3>
          <p>{users.filter(u => u.type === 'client').length}</p>
        </div>
      </div>
    </div>
  );

  const renderUserManagement = () => (
    <div className="users-section">
      <h2>User Management</h2>
      <form onSubmit={handleAddUser} className="add-user-form">
        <input
          type="text"
          placeholder="Username"
          value={newUser.username}
          onChange={(e) => setNewUser({...newUser, username: e.target.value})}
          required
        />
        <input
          type="email"
          placeholder="Email"
          value={newUser.email}
          onChange={(e) => setNewUser({...newUser, email: e.target.value})}
          required
        />
        <input
          type="tel"
          placeholder="Phone Number"
          value={newUser.phone}
          onChange={(e) => setNewUser({...newUser, phone: e.target.value})}
        />
        <select
          value={newUser.type}
          onChange={(e) => setNewUser({...newUser, type: e.target.value})}
        >
          <option value="client">Client</option>
          <option value="fournisseur">Fournisseur</option>
        </select>
        <input
          type="password"
          placeholder="Password"
          value={newUser.password}
          onChange={(e) => setNewUser({...newUser, password: e.target.value})}
          required
        />
        <button type="submit">Add User</button>
      </form>

      <table>
        <thead>
          <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Type</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {users.map(user => (
            <tr key={user.id}>
              <td>{user.username}</td>
              <td>{user.email}</td>
              <td>{user.phone || 'N/A'}</td>
              <td>{user.type}</td>
              <td>
                <button onClick={() => handleDeleteUser(user.id)}>Delete</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );

  const renderProductManagement = () => (
    <div className="products-section">
      <h2>Product Management</h2>
      <form onSubmit={handleAddProduct} className="add-product-form">
        <input
          type="text"
          placeholder="Product Name"
          value={newProduct.name}
          onChange={(e) => setNewProduct({...newProduct, name: e.target.value})}
          required
        />
        <textarea
          placeholder="Description"
          value={newProduct.description}
          onChange={(e) => setNewProduct({...newProduct, description: e.target.value})}
          required
        />
        <input
          type="number"
          placeholder="Price"
          value={newProduct.price}
          onChange={(e) => setNewProduct({...newProduct, price: e.target.value})}
          required
        />
        <select
          value={newProduct.category}
          onChange={(e) => setNewProduct({...newProduct, category: e.target.value})}
        >
          <option value="">Select Category</option>
          <option value="electronics">Electronics</option>
          <option value="clothing">Clothing</option>
          <option value="home">Home</option>
          <option value="gifts">Gifts</option>
        </select>
        <input
          type="text"
          placeholder="Owner Username"
          value={newProduct.owner}
          onChange={(e) => setNewProduct({...newProduct, owner: e.target.value})}
        />
        <select
          value={newProduct.status}
          onChange={(e) => setNewProduct({...newProduct, status: e.target.value})}
        >
          <option value="available">Available</option>
          <option value="reserved">Reserved</option>
          <option value="sold">Sold</option>
          <option value="gift">Gift</option>
        </select>
        <button type="submit">Add Product</button>
      </form>

      <table>
        <thead>
          <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Category</th>
            <th>Owner</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {products.map(product => (
            <tr key={product.id}>
              <td>{product.name}</td>
              <td>{product.price} DT</td>
              <td>{product.category}</td>
              <td>{product.owner}</td>
              <td>{product.status}</td>
              <td>
                <button onClick={() => handleDeleteProduct(product.id)}>Delete</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );

  const renderTransactions = () => (
    <div className="transactions-section">
      <h2>Transactions</h2>
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>Product</th>
            <th>Seller</th>
            <th>Buyer</th>
            <th>Price</th>
            <th>Date</th>
            <th>Type</th>
          </tr>
        </thead>
        <tbody>
          {transactions.length === 0 && (
            <tr>
              <td colSpan="7">No transactions yet</td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  );

  const renderSettings = () => (
    <div className="settings-section">
      <h2>Admin Settings</h2>
      <div className="settings-group">
        <h3>Profile Settings</h3>
        <form>
          <input type="text" placeholder="Admin Name" />
          <input type="email" placeholder="Admin Email" />
          <button type="submit">Update Profile</button>
        </form>
      </div>
      <div className="settings-group">
        <h3>System Settings</h3>
        <div className="toggle-setting">
          <label>Enable Product Gifting</label>
          <input type="checkbox" />
        </div>
        <div className="toggle-setting">
          <label>Enable User Registration</label>
          <input type="checkbox" />
        </div>
      </div>
    </div>
  );

  return (
    <div className="admin-container">
      <div className="sidebar">
        <div className="sidebar-logo">E-Commerce Admin</div>
        <div className="sidebar-menu">
          {menuItems.map(item => (
            <div 
              key={item.id}
              className={`sidebar-menu-item ${currentView === item.id ? 'active' : ''}`}
              onClick={() => setCurrentView(item.id)}
            >
              <span>{item.icon}</span>
              {item.label}
            </div>
          ))}
        </div>
      </div>
      <div className="main-content">
        {currentView === 'dashboard' && renderDashboard()}
        {currentView === 'users' && renderUserManagement()}
        {currentView === 'products' && renderProductManagement()}
        {currentView === 'transactions' && renderTransactions()}
        {currentView === 'settings' && renderSettings()}
      </div>
    </div>
  );
};

export default AdminPanel;